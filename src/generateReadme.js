import fs from "fs";
import path from "path";
import chalk from "chalk";

// 📌 Function for Base README (Common Sections)
const baseReadme = (metadata, includeBadges) => {
  let content = `# ${metadata.name} 🚀  

> ${metadata.description}  

## 📌 Table of Contents
if (includeBadges) {
- [📖 Overview](#-overview)
- [⚙️ Installation](#-installation)
- [🚀 Features](#-features)
- [📂 Project Structure](#-project-structure)
- [💡 Usage](#-usage)
- [🛠️ Tech Stack](#-tech-stack)
- [🌍 Repository](#-repository)
- [📜 License](#-license)
- [🔮 Future Improvements](#-future-improvements)
- [❓ FAQ](#-faq)

`;

  if (includeBadges) {
    content += `## 🏆 Badges  
![GitHub stars](https://img.shields.io/github/stars/${metadata.repository}.svg)  
![GitHub issues](https://img.shields.io/github/issues/${metadata.repository}.svg)  
![GitHub license](https://img.shields.io/github/license/${metadata.repository}.svg)  
![npm downloads](https://img.shields.io/npm/dt/${metadata.name}.svg)  

`;
  }

  content += `## 📖 Overview  
${metadata.description}  

This project is designed to **solve XYZ problem** using **XYZ technology**. It is lightweight, highly customizable, and easy to set up.

## ⚙️ Installation  

\`\`\`sh
# Clone the repository
git clone ${metadata.repository || "<repository_url>"} my-project

# Navigate to the project directory
cd my-project

# Install dependencies
npm install

# Run the application
npm start
\`\`\`

> 📝 **Note:** Ensure that **Node.js v14+** is installed before running this project.

---

## 🚀 Features  
✅ Feature 1 - Description  
✅ Feature 2 - Description  
✅ Feature 3 - Description  
✅ Feature 4 - Description  

---

## 📂 Project Structure  

\`\`\`sh
my-project/
│── src/               # Source code
│   ├── components/    # UI Components
│   ├── utils/         # Utility functions
│   ├── api/           # API calls
│── public/            # Static assets
│── package.json       # Project metadata
│── README.md          # Documentation
\`\`\`

> 💡 **Tip:** Modify this structure based on your needs.

---

## 💡 Usage  

\`\`\`sh
# Run in development mode
npm run dev

# Build for production
npm run build

# Run tests
npm test
\`\`\`

`;

  return content;
};

// 📌 Function for Open Source README
const openSourceReadme = () => {
  return `## 🤝 Contributing  
- Fork this repository  
- Clone it: \`git clone <repository_url>\`  
- Create a new branch and contribute!  

## 📜 Code of Conduct  
Please follow our [Code of Conduct](CODE_OF_CONDUCT.md).  

`;
};

// 📌 Function for CLI Tool README
const cliToolReadme = (metadata) => {
  return `## ⚙️ CLI Commands  
\`\`\`sh
# Install globally
npm install -g ${metadata.name}

# Run the CLI tool
${metadata.name} --help
\`\`\`

`;
};

// 📌 Function for API Docs README
const apiDocsReadme = () => {
  return `## 📌 API Endpoints  
\`\`\`sh
GET /api/v1/users
POST /api/v1/auth/login
PUT /api/v1/users/:id
DELETE /api/v1/users/:id
\`\`\`

## 📜 API Documentation  
Refer to the [API Documentation](docs/api.md) for detailed usage and response formats.  

`;
};

// 📌 Main function to generate README
const generateReadme = (metadata, includeBadges, templateType) => {
  let readmeContent = baseReadme(metadata, includeBadges);

  switch (templateType) {
    case "open-source":
      readmeContent += openSourceReadme();
      break;
    case "cli-tool":
      readmeContent += cliToolReadme(metadata);
      break;
    case "api-docs":
      readmeContent += apiDocsReadme();
      break;
    default:
      break; // Basic template already included
  }

  readmeContent += `## 🛠️ Tech Stack  
🔹 **Frontend:** React, Vue, or your choice  
🔹 **Backend:** Node.js, Express  
🔹 **Database:** MongoDB, PostgreSQL  
🔹 **DevOps:** Docker, CI/CD  

---

## 🌍 Repository  
- **GitHub Repo**: ${metadata.repository}

## 📜 License  
This project is licensed under the **${metadata.license}** License.

---

## 🔮 Future Improvements  
- [ ] Feature 1  
- [ ] Feature 2  
- [ ] Improve performance  
- [ ] More integrations  

---

## ❓ FAQ  

**Q: How do I customize this project?**  
A: Edit \`config.js\` or modify \`package.json\` settings.

**Q: Can I use this in production?**  
A: Absolutely! Follow best practices and security guidelines.

---

🚀 **Generated by [AutoReadMe](https://github.com/your-repo-link)**  
`;

  const readmePath = path.resolve(process.cwd(), "README.md");
  fs.writeFileSync(readmePath, readmeContent, "utf-8");

  console.log(chalk.green(`✅ README.md successfully created at ${readmePath}`));
};

export default generateReadme;
